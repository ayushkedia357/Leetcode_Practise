class Solution:
    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:
        tempk=k
        l=[]
        start=0
        end=0
        windowmax=-2^31
        while(end<len(nums)):
            if(nums[end]>windowmax):
                windowmax=nums[end]
            tempk-=1
            while(tempk==0):
                l.append(windowmax)
                if(windowmax!=nums[start]):
                    tempk+=1
                    start+=1
                    continue
                tempk=k
                print(start,end)
                end=end-k+1
                windowmax=-2^31
                start+=1
            end+=1
        return l
    '''
        l=[]
        for i in range(len(nums)-k+1):
            l.append(max(nums[i:i+k]))
        return l

        ###############################
        tempk=k
        l=[]
        start=0
        end=0
        windowmax=-2^31
        windowmax1=-2^31-1
        windowmax2=-2^31-2
        while(end<len(nums)):
            if(nums[end]>windowmax):
                windowmax2=windowmax1
                windowmax1=windowmax
                windowmax=nums[end]
            elif(windowmax1<nums[end]):
                windowmax1=nums[end]
            elif(windowmax2<nums[end]):
                windowmax2=nums[end]
            tempk-=1
            while(tempk==0):
                print(windowmax,windowmax1,start)
                l.append(windowmax)
                tempk+=1
                if(windowmax1==nums[start]):
                    start+=1
                    windowmax1=windowmax2
                    continue
                elif(windowmax==nums[start]):
                    print(start)
                    windowmax=windowmax1
                    windowmax1=windowmax2
                    windowmax2=-2^31
                start+=1
            end+=1
        return l
        '''
