class Solution:
    def minimumDeleteSum(self, s1: str, s2: str) -> int:
        n1 = len(s1)
        n2 = len(s2)
        
        memo = [[0 for i in range(n2+1)]for j in range(n1+1)]
        
        for j in range(1,n2+1):
            memo[0][j] = memo[0][j-1] + ord(s2[j-1])
            
        for i in range(1,n1+1):
            memo[i][0] = memo[i-1][0] + ord(s1[i-1])
            for j in range(1,n2+1):
                if s1[i-1] == s2[j-1]:
                    memo[i][j] = memo[i-1][j-1]
                    
                else:
                    memo[i][j] = min(memo[i-1][j] + ord(s1[i-1]) ,memo[i][j-1] + ord(s2[j-1]))
        
        return memo[n1][n2]

        '''
        lcssum = 0
        
        i = n1
        j = n2
        
        while i>0 and j>0:
            if s1[i-1] == s2[j-1]:
                print(s1[i-1])
                lcssum += ord(s1[i-1])
                i -= 1
                j -= 1
            else:
                if memo[i][j-1]>memo[i-1][j]:
                    j -= 1
                elif memo[i][j-1]<memo[i-1][j]:
                    i -= 1
                else:
                    if s1[i-1]>s2[j-1]:
                        j -= 1
                    else:
                        i -= 1
        
        print(lcssum)
        
        for i in s1:
            sum1 += ord(i)
            
        for i in s2:
            sum2 += ord(i)
            
        return sum1+sum2-2*lcssum
        '''
